<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Specify custom storage locations for generated documents | WIKA Documentation </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Specify custom storage locations for generated documents | WIKA Documentation ">
    <meta name="generator" content="docfx 2.56.6.0">
    
    <link rel="shortcut icon" href="../../../../microsoft-dynamics-crm-365-icon.ico">
    <link rel="stylesheet" href="../../../../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../../../../styles/docfx.css">
    <link rel="stylesheet" href="../../../../styles/main.css">
    <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet"> 
    <meta property="docfx:navrel" content="../../../../toc.html">
    <meta property="docfx:tocrel" content="../../../finance/TOC.html">
    
    
    
  </head>  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../../../../index.html">
                <img id="logo" class="svg" src="../../../../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="">
<h1 id="specify-custom-storage-locations-for-generated-documents">Specify custom storage locations for generated documents</h1>


<p>The application programming interface (API) of the Electronic reporting (ER) framework lets you extend the list of storage locations for documents that ER formats generate. This topic explains how to add a custom storage location for generated documents by delegating the task of creating ER destinations to the default destination factory and then implementing a custom class that has its own destination logic.</p>
<h2 id="prerequisites">Prerequisites</h2>
<p>Deploy a topology that supports continuous build. For more information, see <a href="https://docs.microsoft.com/dynamics365/unified-operations/dev-itpro/perf-test/continuous-build-test-automation">Deploy topologies that support continuous build and test automation</a>. You must have access to this topology for one of the following roles:</p>
<ul>
<li>Electronic reporting developer</li>
<li>Electronic reporting functional consultant</li>
<li>System administrator</li>
</ul>
<p>You must also have access to the development environment for this topology.</p>
<p>All the tasks in this topic can be completed in the <strong>USMF</strong> company.</p>
<h2 id="import-the-fixed-asset-roll-forward-er-format">Import the Fixed asset roll forward ER format</h2>
<p>To generate the documents that you plan to add a custom storage location for, <a href="er-download-configurations-global-repo.html">import</a> the <strong>Fixed asset roll forward</strong> ER format configuration into the current topology.</p>
<p><img src="./media/er-custom-storage-generated-files-import-format.png" alt="Configuration repository page"></p>
<h2 id="run-the-fixed-asset-roll-forward-report">Run the Fixed asset roll forward report</h2>
<ol>
<li>Go to <strong>Fixed assets</strong> &gt; <strong>Inquiries and reports</strong> &gt; <strong>Transaction reports</strong> &gt; <strong>Fixed asset roll forward</strong>.</li>
<li>In the <strong>From date</strong> field, enter <strong>1/1/2017</strong> (January 1, 2017).</li>
<li>In the <strong>To date</strong> field, enter <strong>1/31/2017</strong> (January 31, 2017).</li>
<li>In the <strong>Currency field</strong>, select <strong>Accounting currency</strong>.</li>
<li>In the <strong>Format mapping</strong> field, select <strong>Fixed asset roll forward</strong>.</li>
<li>Select <strong>OK</strong>.</li>
</ol>
<p><img src="./media/er-custom-storage-generated-files-runtime-dialog.png" alt="Runtime dialog box for the Fixed asset roll forward report"></p>
<p>In Microsoft Excel, review the outbound document that is generated and available for download. This behavior is the <a href="electronic-reporting-destinations.html#default-behavior">default behavior</a> for an ER format that no <a href="electronic-reporting-destinations.html">destinations</a> are configured for, and that is running in interactive mode.</p>
<h2 id="review-the-source-code">Review the source code</h2>
<p>Review the code of the <code>generateReportByGER()</code> method of the <code>AssetRollForwardService</code> class. Notice that the <code>Run()</code> method is used to call the ER framework and generate the <strong>Fixed asset roll forward</strong> report.</p>
<pre><code class="lang-xpp">class AssetRollForwardService extends SysOperationServiceBase
{
    public const str ERFormatModelName = 'Fixed assets';
    public const str ERModelDataSourceName = 'model';
    public const str DefaultExportedFileName = 'AssetRollForward';

    /// &lt;summary&gt;
    /// Generates report by general electronic reporting
    /// &lt;/summary&gt;
    /// &lt;param name = &quot;_contract&quot;&gt;The Asset Period Statement contract&lt;/param&gt;
    public void generateReportByGER(AssetRollForwardContract _contract)
    {
        ERFormatMappingId   formatMappingId;
        AssetRollForwardDP  dataProvider;
        AssetRollForwardTmp assetRollForwardTmp;
        Query               query;

        query = new Query(SysOperationHelper::base64Decode(_contract.parmQuery()));
        dataProvider = AssetRollForwardDP::construct();
        formatMappingId = _contract.parmFormatMapping();
        assetRollForwardTmp = dataProvider.getAssetRollForwardTmp(_contract, query);

        if (assetRollForwardTmp)
        {
            try
            {
                ERIModelDefinitionParamsAction parameters = new ERModelDefinitionParamsUIActionComposite()
                    .add(new ERModelDefinitionDatabaseContext().addTemporaryTable(assetRollForwardTmp))
                    .add(new ERModelDefinitionObjectParameterAction(ERModelDataSourceName, 'MyParameters', _contract, true));

                // Call ER to generate the report.
                ERObjectsFactory::createFormatMappingRunByFormatMappingId(formatMappingId, DefaultExportedFileName)
                    .withParameter(parameters)
                    .withFileDestination(_contract.getFileDestination())
                    .run();
            }
            catch
            {
                // An error occurred while exporting data.
                error(&quot;@SYP4861341&quot;);
            }
        }
        else
        {
            // There is no data available.
            info(&quot;@SYS300117&quot;);
        }
    }
}
</code></pre>
<h2 id="modify-the-source-code">Modify the source code</h2>
<ol>
<li><p>In your Visual Studio project, add a new class (<code>AssetRollForwardDestination</code> in this example), and write code to implement your custom destination for <strong>Fixed asset roll forward</strong> reports that are generated.</p>
<ul>
<li>The <code>new()</code> method is designed to get the original ER destination object and the application logic–driven parameter that specifies the custom location where generated reports should be stored. In this example, the custom location is the name of a folder of the local file system of the server that runs the Application Object Server (AOS) service.</li>
<li>The <code>saveFile()</code> method is designed to save a generated document to a folder of the local file system of the server that runs the AOS service.</li>
</ul>
<pre><code class="lang-xpp">using Microsoft.Dynamics365.LocalizationFramework;

/// &lt;summary&gt;
/// Destination class for &lt;c&gt;AssetRollForwardDestinationFactory&lt;/c&gt; that stores a generated report.
/// &lt;/summary&gt;
public class AssetRollForwardDestination implements ERIFileDestination
{
    private ERIFileDestination originDestination;
    private str TargetFolder;

    /// &lt;summary&gt;
    /// Creates a stream for new file.
    /// &lt;/summary&gt;
    /// &lt;param name = &quot;_fileName&quot;&gt;Name of a new file.&lt;/param&gt;
    /// &lt;returns&gt;Stream for new file.&lt;/returns&gt;
    public System.IO.Stream newFileStream(System.String _fileName)
    {
        return originDestination.newFileStream(_fileName);
    }

    /// &lt;summary&gt;
    /// Saves file in destination.
    /// &lt;/summary&gt;
    /// &lt;param name = &quot;_stream&quot;&gt;A stream to save.&lt;/param&gt;
    /// &lt;param name = &quot;_fileName&quot;&gt;A file name.&lt;/param&gt;
    /// &lt;returns&gt;Saved stream.&lt;/returns&gt;
    public System.IO.Stream saveFile(System.IO.Stream _stream, System.String _fileName)
    {
        _stream.Seek(0, System.IO.SeekOrigin::Begin);
        using (var localStream = System.IO.File::OpenWrite(TargetFolder + _fileName))
        {
            _stream.CopyTo(localStream);
        }
        return _stream;
    }

    /// &lt;summary&gt;
    /// Constructs destination for fixed asset roll forward report.
    /// &lt;/summary&gt;
    /// &lt;param name = &quot;_originDestination&quot;&gt;The original destination.&lt;/param&gt;
    /// &lt;param name = &quot;_TargetFoder&quot;&gt;The folder to store a report that's being created.&lt;/param&gt;
    /// &lt;returns&gt;The fixed asset roll forward destination.&lt;/returns&gt;
    public static AssetRollForwardDestination construct(ERIFileDestination _originDestination, str _TargetFoder)
    {
        return new AssetRollForwardDestination(_originDestination, _TargetFoder);
    }

    protected void new(ERIFileDestination _originDestination, str _TargetFoder)
    {
        originDestination = _originDestination;
        TargetFolder = _TargetFoder;
    }
}
</code></pre>
</li>
<li><p>In your Visual Studio project, add a new class (<code>AssetRollForwardDestinationFactory</code> in this example), and write code to set up a custom destination factory that delegates the creation of a destination to the default destination factory, and to wrap a file destination with your own destination.</p>
<pre><code class="lang-xpp">using Microsoft.Dynamics365.LocalizationFramework;
using Microsoft.Dynamics365.LocalizationFramework.Format.FileGeneration;

/// &lt;summary&gt;
/// Destination factory for using &lt;c&gt;AssetRollForwardDestinationFactory&lt;/c&gt;.
/// &lt;/summary&gt;
public class AssetRollForwardDestinationFactory implements ERIFileDestinationFactory, ERIFileDestinationFactoryPostProcessor
{
    private ERIFileDestinationFactory originDestinationFactory;
    private str TargetFolder;

    /// &lt;summary&gt;
    /// Creates file destination for print management.
    /// &lt;/summary&gt;
    /// &lt;param name = &quot;_fileDestination&quot;&gt;A default file destination.&lt;/param&gt;
    /// &lt;param name = &quot;_identification&quot;&gt;An identification strategy.&lt;/param&gt;
    /// &lt;param name = &quot;_rootContext&quot;&gt;A root context.&lt;/param&gt;
    /// &lt;param name = &quot;_root&quot;&gt;A root element.&lt;/param&gt;
    /// &lt;returns&gt;A file destination.&lt;/returns&gt;
    public ERIDataDrivenFileDestination createPrintMgmtDestination(
        ERIFileDestination _fileDestination,
        ERIObjectIdentificationStrategy _identification,
        ERTextFormatDataContext _rootContext,
        ERTextFormatIFileComponent _root)
    {
        ERIDataDrivenFileDestination dataDrivenDestination = originDestinationFactory.createPrintMgmtDestination(
            _fileDestination,
            _identification,
            _rootContext,
            _root);

        IFileDestinationHost fileDestinationHost = dataDrivenDestination as IFileDestinationHost;
        if (fileDestinationHost)
        {
            fileDestinationHost.FileDestination = AssetRollForwardDestination::construct(
                fileDestinationHost.get_FileDestination(),
                TargetFolder);
        }

        return dataDrivenDestination;
    }

    /// &lt;summary&gt;
    /// Constructs the fixed asset roll forward destination factory.
    /// &lt;/summary&gt;
    /// &lt;param name = &quot;_originDestinationFactory&quot;&gt;The original destination.&lt;/param&gt;
    /// &lt;param name = &quot;_TargetFolder&quot;&gt;The string containing a folder name that corresponds to the report, that's being created.&lt;/param&gt;
    /// &lt;returns&gt;The destination factory for the fixed asset roll forward report.&lt;/returns&gt;
    public static AssetRollForwardDestinationFactory construct(ERIFileDestinationFactory _originDestinationFactory, str _TargetFolder)
    {
        AssetRollForwardDestinationFactory destinationFactory = new AssetRollForwardDestinationFactory(_originDestinationFactory, _TargetFolder);

        ERIFileDestinationFactoryPostProcessorsHost factoryPostProcessing = ERCast::asObject(destinationFactory.originDestinationFactory) as ERIFileDestinationFactoryPostProcessorsHost;

        if (factoryPostProcessing)
        {
            factoryPostProcessing.addDestinationPostProcessor(destinationFactory);
        }
        return destinationFactory;
    }

    public ERIFileDestination processDestinationAfterCreation(ERIFileDestination _sourceDestination)
    {
        return AssetRollForwardDestination::construct(_sourceDestination, TargetFolder);
    }

    protected void new(ERIFileDestinationFactory _originDestinationFactory, str _TargetFolder)
    {
        originDestinationFactory = _originDestinationFactory;
        TargetFolder = _TargetFolder;
    }
}
</code></pre>
</li>
<li><p>Modify the existing <code>AssetRollForwardService</code> class, and write code to set up a custom destination factory for the report runner. Notice that when a custom destination factory is constructed, the application-driven parameter that specifies a target folder is passed. In this way, that target folder is used to store generated files.</p>
<div class="NOTE">
<h5>Note</h5>
<p>Make sure that the specified folder (<strong>c:\0</strong> in this example) is present in the local file system of the server that runs the AOS service. Otherwise, a <a href="https://docs.microsoft.com/dotnet/api/system.io.directorynotfoundexception?view=netcore-3.1">DirectoryNotFoundException</a> exception will be thrown at runtime.</p>
</div>
<pre><code class="lang-xpp">using Microsoft.Dynamics365.LocalizationFramework;
/// &lt;summary&gt;
/// The electronic reporting service class for fixed asset roll forward report
/// &lt;/summary&gt;
class AssetRollForwardService extends SysOperationServiceBase
{
    public const str ERFormatModelName = 'Fixed assets';
    public const str ERModelDataSourceName = 'model';
    public const str DefaultExportedFileName = 'AssetRollForward';

    /// &lt;summary&gt;
    /// Generates report by general electronic reporting
    /// &lt;/summary&gt;
    /// &lt;param name = &quot;_contract&quot;&gt;The Asset Period Statement contract&lt;/param&gt;
    public void generateReportByGER(AssetRollForwardContract _contract)
    {
        ERFormatMappingId   formatMappingId;
        AssetRollForwardDP  dataProvider;
        AssetRollForwardTmp assetRollForwardTmp;
        Query               query;

        query = new Query(SysOperationHelper::base64Decode(_contract.parmQuery()));
        dataProvider = AssetRollForwardDP::construct();
        formatMappingId = _contract.parmFormatMapping();
        assetRollForwardTmp = dataProvider.getAssetRollForwardTmp(_contract, query);

        if (assetRollForwardTmp)
        {
            try
            {
                ERIModelDefinitionParamsAction parameters = new ERModelDefinitionParamsUIActionComposite()
                    .add(new ERModelDefinitionDatabaseContext().addTemporaryTable(assetRollForwardTmp))
                    .add(new ERModelDefinitionObjectParameterAction(ERModelDataSourceName, 'MyParameters', _contract, true));

                // Call ER to generate the report.
                ERIFormatMappingRun formatMappingRun = ERObjectsFactory::createFormatMappingRunByFormatMappingId(formatMappingId, DefaultExportedFileName);
                formatMappingRun.withParameter(parameters);
                formatMappingRun.withFileDestination(_contract.getFileDestination());

                ERIFileDestinationFactoryHost factoryHost = ERCast::asObject(formatMappingRun) as ERIFileDestinationFactoryHost;
                if (factoryHost)
                {
                    ERIFileDestinationFactory fileDestinationFactory = factoryHost.getFileDestinationFactory();
                    factoryHost.setFileDestinationFactory(AssetRollForwardDestinationFactory::construct(fileDestinationFactory, @'c:\0\'));
                    formatMappingRun.run();
                }
            }
            catch
            {
                // An error occurred while exporting data.
                error(&quot;@SYP4861341&quot;);
            }
        }
        else
        {
            // There is no data available.
            info(&quot;@SYS300117&quot;);
        }
    }
}
</code></pre>
</li>
<li><p>Rebuild your project.</p>
</li>
</ol>
<h2 id="re-run-the-fixed-asset-roll-forward-report">Re-run the Fixed asset roll forward report</h2>
<ol>
<li>Go to <strong>Fixed assets</strong> &gt; <strong>Inquiries and reports</strong> &gt; <strong>Transaction reports</strong> &gt; <strong>Fixed asset roll forward</strong>.</li>
<li>In the <strong>From date</strong> field, enter <strong>1/1/2017</strong>.</li>
<li>In the <strong>To date</strong> field, enter <strong>1/31/2017</strong>.</li>
<li>In the <strong>Currency field</strong>, select <strong>Accounting currency</strong>.</li>
<li>In the <strong>Format mapping</strong> field, select <strong>Fixed asset roll forward</strong>.</li>
<li>Select <strong>OK</strong>.</li>
<li>Browse the local <strong>C:\0</strong> folder to find the generated file.</li>
</ol>
<div class="NOTE">
<h5>Note</h5>
<p>Because the <code>originDestination</code> object isn't used in the <code>AssetRollForwardDestination</code> object in this example, the configurations for the ER format <a href="electronic-reporting-destinations.html">destinations</a> will be ignored at runtime.</p>
</div>
<h2 id="additional-resources">Additional resources</h2>
<ul>
<li><a href="electronic-reporting-destinations.html">Electronic reporting (ER) destinations</a></li>
<li><a href="https://docs.wika.com/en-us/dynamics365/supply-chain/fin-ops-core/dev-itpro/extensibility/extensibility-home-page">Extensibility home page (This is an external linThis link was changed due to HTMLfromRepoGenerator)</a></li>
</ul>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../../../../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../../../../styles/docfx.js"></script>
    <script type="text/javascript" src="../../../../styles/main.js"></script>
  </body>
</html>
